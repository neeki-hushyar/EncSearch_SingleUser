Enclosed:
	command line input descriptions
	screenshot of a test run

Command Line Inputs:
*Note - for info about command line arguments type ‘module_name.py -h’
*Note - very important to type relative or full path as specified by command line arguments

To run program: first run server side script, and then client side script.

server-side: 

server_script.py:
  python3 server_script.py -p OPTIONAL_PORT


client_side:

upload.py:
  python3 upload.py -i IP_ADDRESS -d RELATIVE_PATH_TO_DIR_CONTAINING_FILES_TO_ENCRYPT
  
request.py:
  python3 request.py -i IP_ADDRESS -w SEARCH_TERM -d FULL_DIR_PATH_TO_RETURN_TXT_FILE_TO -p OPTIONAL_PORT

upload_more.py:
  python3 upload_more.py -i IP_ADDRESS -d RELATIVE_PATH_TO_DIR_CONTAINING_FILES_TO_ENCRYPT

Note, after each round of testing the following files must be deleted in order to run program again and restart the encrypted keyword database: 
	server_side/word_to_id.txt
	server_side/name_to_id.txt
	any document on the server side whose name is an integer: 
		i.e. server_side/0 server_side/1


Screenshot:
	The screenshot of the test run shows a single round of tests: the server side script is executed first, after which the client uploads all documents in files/jc_and_ge. The server side script is called again, after which the client uploads additional documents and specifies files/1984. The server side script is called again after which the client requests documents containing the search word: Winston (case sensitive search). After which 1984.txt is decrypted and placed in the results dir on the desktop, as specified by the command line inputs.
